name: SLS Deploy
on:
    push:
        branches: [dev]
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

jobs:
    start-runner:
        name: Start self-hosted AmazonLinux EC2 runner
        runs-on: ubuntu-latest
        outputs:
            label: ${{ steps.start-ec2-runner.outputs.label}}
            ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id}}
        steps:
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
                  aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
                  aws-regioin: ${{secrets.AWS_REGION}}
            - name: Start EC2 runner
              id: start-ec2-runner
              uses: machulav/ec2-github-runner@v2
              with:
                  mode: start
                  github-token: ${{secrets.GH_PERSONAL_ACCESS_TOKEN}}
                  # AMI Id of Amazon Linux Machine with git and docker installed and enabled
                  ec2-image-id: ami-0648a8c2a497d8123
                  # Instance Type any EC2 Instance Type
                  ec2-instance-type: t2.micro
                  # Subnet ID
                  subnet-id: subnet-3f4ab177
                  security-group-id: sg-0352469eec6aa2296
                  aws-resource-tags: >
                      [
                          {"Key": "Name", "Value": "Custom github action runner"},
                          {"Key": "GitHub Repo", "Value": "${{github.repository}}"}
                      ]
    build-and-deploy:
        name: Build and deploy
        needs: start-runner
        runs-on: ${{needs.start-runner.outputs.label}}
        environment: dev
        strategy:
            matrix:
                node-version: [14.x]
        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - run: SHARP_IGNORE_GLOBAL_LIBVIPS=1 npm ci --arch=x64 --platform=linux
            - name: Serverless Deploy
              uses: serverless/github-action@master
              with:
                  args: deploy --stage dev
              env:
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  DB_URL: ${{ secrets.DB_URL }}
                  TOKEN_SECRET: ${{ secrets.TOKEN_SECRET }}
                  REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
                  STRIPE_PK: ${{ secrets.STRIPE_PK }}
                  STRIPE_SK: ${{ secrets.STRIPE_SK }}
                  STRIPE_CONNECT_CLIENT_ID: ${{ secrets.STRIPE_CONNECT_CLIENT_ID }}
                  STRIPE_CONNECT_ACCOUNT_RETURN_URL: ${{ secrets.STRIPE_CONNECT_ACCOUNT_RETURN_URL }}
                  STRIPE_CONNECT_ACCOUNT_REFRESH_URL: ${{ secrets.STRIPE_CONNECT_ACCOUNT_REFRESH_URL }}
                  IP_STACK_KEY: ${{ secrets.IP_STACK_KEY }}
    stop-runner:
        name: Stop runner
        needs:
            - start-runner
            - build-and-deploy
        runs-on: ubuntu-latest
        if: ${{ always() }}
        steps:
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
                  aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
                  aws-regioin: ${{secrets.AWS_REGION}}
            - name: Stop EC2 runner
              id: start-ec2-runner
              uses: machulav/ec2-github-runner@v2
              with:
                  mode: stop
                  github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
                  label: ${{ needs.start-runner.outputs.label }}
                  ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
